{"version":3,"sources":["App.tsx"],"names":["App","useState","search","setsearch","filteredResults","setfilteredResults","isMod","setisMod","val","setval","useEffect","data","filter","i","A","toLowerCase","includes","style","flexDirection","backgroundColor","alignItems","justifyContent","height","width","borderRadius","borderColor","borderWidth","padding","onChangeText","e","placeholder","placeholderTextColor","marginLeft","value","onPress","color","fontSize","Dimensions","get","margin","marginTop","fontStyle","map","styles","mainCell","textCell","B","C","modText","D","E","StyleSheet","create","container","flex","textAlign","fontWeight"],"mappings":"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","file":"static/js/app.4e830916.chunk.js","sourcesContent":["import { StatusBar } from \"expo-status-bar\";\nimport React, { useEffect, useState } from \"react\";\nimport {\n  StyleSheet,\n  Text,\n  View,\n  TextInput,\n  Button,\n  ScrollView,\n  Platform,\n  Dimensions,\n  TouchableOpacity,\n} from \"react-native\";\nimport data from \"./src/data/data.json\";\n\nexport default function App() {\n  const [search, setsearch] = useState(\"\");\n  const [filteredResults, setfilteredResults] = useState([]);\n  const [isMod, setisMod] = useState(false);\n  const [val, setval] = useState(0);\n\n  useEffect(() => {\n    setfilteredResults(\n      data.filter((i) => {\n        return i.A.toLowerCase().includes(search.toLowerCase());\n      })\n    );\n  }, [search, data]);\n\n  return (\n    <View>\n      <View\n        style={{\n          flexDirection: \"row\",\n          backgroundColor: \"#0582ff\",\n          alignItems: \"center\",\n          justifyContent: \"center\",\n          height: 100,\n        }}\n      >\n        <TextInput\n          style={{\n            width: 300,\n            height: 40,\n            borderRadius: 5,\n            borderColor: \"white\",\n            borderWidth: 2,\n            padding: 5,\n          }}\n          onChangeText={(e) => setsearch(e)}\n          placeholder=\"Search table here\"\n          placeholderTextColor=\"white\"\n        />\n        <TextInput\n          style={{\n            width: 300,\n            height: 40,\n            borderRadius: 5,\n            borderColor: \"white\",\n            borderWidth: 2,\n            padding: 5,\n            marginLeft: 10,\n          }}\n          value={val}\n          onChangeText={(e) => setval(e)}\n          placeholder=\"Enter number to manipulate D\"\n          placeholderTextColor=\"white\"\n        />\n        <TouchableOpacity\n          style={{\n            width: 120,\n            height: 40,\n            backgroundColor: \"#55d96b\",\n            padding: 5,\n            borderRadius: 10,\n            borderWidth: 1,\n            alignItems: \"center\",\n            justifyContent: \"center\",\n            marginLeft: 10,\n            borderColor: \"#55d96b\",\n          }}\n          onPress={() => setisMod(true)}\n        >\n          <Text style={{ color: \"white\", fontSize: 16 }}>Apply</Text>\n        </TouchableOpacity>\n        <TouchableOpacity\n          style={{\n            width: 120,\n            height: 40,\n            backgroundColor: \"#e8b41a\",\n            padding: 5,\n            borderRadius: 10,\n            borderWidth: 1,\n            alignItems: \"center\",\n            justifyContent: \"center\",\n            marginLeft: 10,\n            borderColor: \"#e8b41a\",\n          }}\n          onPress={() => {\n            setisMod(false), setval(0);\n          }}\n        >\n          <Text style={{ color: \"white\", fontSize: 16 }}>Reset</Text>\n        </TouchableOpacity>\n      </View>\n\n      <View>\n        <ScrollView\n          style={{\n            height: Dimensions.get(\"window\").height * 0.7,\n            margin: 20,\n            marginTop: 50,\n          }}\n        >\n          {isMod ? (\n            <View style={{ alignItems: \"center\", justifyContent: \"center\" }}>\n              <Text style={{ fontStyle: \"italic\", color: \"green\" }}>\n                Autocolumn manipulation for D is on. Press Reset to switch it\n                off\n              </Text>\n            </View>\n          ) : (\n            <View style={{ alignItems: \"center\", justifyContent: \"center\" }}>\n              <Text style={{ fontStyle: \"italic\", color: \"grey\" }}>\n                Autocolumn manipulation for D is Off. Enter greater than 0 and\n                apply to switch it on\n              </Text>\n            </View>\n          )}\n          {filteredResults.map((i) => (\n            <View\n              style={{\n                width: \"100%\",\n\n                height: 60,\n                flexDirection: \"row\",\n                justifyContent: \"space-between\",\n                alignItems: \"center\",\n                padding: 10,\n              }}\n            >\n              <Text style={styles.mainCell}>{i.A}</Text>\n              <Text style={styles.textCell}>{i.B}</Text>\n              <Text style={styles.textCell}>{i.C}</Text>\n              {isMod ? (\n                val > 0 ? (\n                  <Text style={styles.modText}>{i.D * val}</Text>\n                ) : (\n                  <Text style={styles.textCell}>{i.D}</Text>\n                )\n              ) : (\n                <Text style={styles.textCell}>{i.D}</Text>\n              )}\n\n              <Text style={styles.textCell}>{i.E}</Text>\n            </View>\n          ))}\n        </ScrollView>\n      </View>\n\n      <StatusBar style=\"auto\" />\n    </View>\n  );\n}\n\nconst styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    backgroundColor: \"#fff\",\n    alignItems: \"center\",\n    justifyContent: \"center\",\n    width: \"100%\",\n  },\n  textCell: {\n    width: \"15%\",\n    borderWidth: 1,\n    borderColor: \"#e3e3e3\",\n    height: 30,\n    textAlign: \"center\",\n    padding: 5,\n    borderRadius: 5,\n  },\n  mainCell: {\n    width: \"30%\",\n    fontWeight: \"bold\",\n    borderWidth: 1,\n    borderColor: \"#e3e3e3\",\n    height: 30,\n    textAlign: \"center\",\n    padding: 5,\n    borderRadius: 5,\n  },\n  modText: {\n    width: \"15%\",\n    borderWidth: 1,\n    borderColor: \"#e3e3e3\",\n    height: 30,\n    textAlign: \"center\",\n    padding: 5,\n    color: \"green\",\n    fontWeight: \"bold\",\n    borderRadius: 5,\n  },\n});\n"],"sourceRoot":""}